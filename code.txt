int segOutput[8] = {18,19,20,21,22,23,24,25};
//int keyInput[8] = {5,6,7,8,9,10,11,12};
const byte ROWS = 4; 
const byte COLS = 4; 

int padKeys[COLS][ROWS] = {
  {1, 2, 3, 0},
  {4, 5, 6, 0},
  {7, 8, 9, 0},
  {0, 0, 0, 0}
};

byte colPins[COLS] = {9,10,11,12}; 
byte rowPins[ROWS] = {5, 6, 7, 8}; 

int keyPr[ROWS] = {0,0,0,0};

int PASSWORD[3] = {1,4,9};
const int nums[10][8] = //declaring array
{
  {1,1,1,0,1,1,1,0}, //0
  {0,0,1,0,1,0,0,0}, //1
  {1,1,0,0,1,1,0,1}, //2
  {0,1,1,0,1,1,0,1}, //3
  {0,0,1,0,1,0,1,1}, //4
  {0,1,1,0,0,1,1,1}, //5
  {1,1,1,0,0,1,1,1}, //6
  {0,0,1,0,1,1,0,0}, //7
  {1,1,1,0,1,1,1,1}, //8
  {0,1,1,0,1,1,1,1}  //9
};
void setup() 
{
  Serial.begin(9600);
  //pinMode(0, OUTPUT);
  for (int i = 0; i < 8; i++){
    pinMode(segOutput[i], OUTPUT);  
  }
  for (int i = 0; i < 4; i++) {
    pinMode(colPins[i], OUTPUT);
    pinMode(rowPins[i], INPUT);
  }
  pinMode(27, OUTPUT);
  pinMode(28, OUTPUT);
  pinMode(29, OUTPUT);
}

int x = 0;

void loop() 
{
    int j  = readNumber();
    if (j == 10)
    {
      x = 0;
    } else
    {
      x = j;
      pass(x);
      displaySeg(x);
    }
    delay(2000);
}

int passCount = 0;
void pass(int num)
{
    if (passCount == 0 && num == PASSWORD[0])
    {
      Serial.println("ayyy");
      digitalWrite(27, HIGH);
      digitalWrite(28, LOW);
      digitalWrite(29, LOW);
      passCount++;
    } else if (passCount == 1  && num == PASSWORD[1])
    {
      digitalWrite(27, HIGH);
      digitalWrite(28, HIGH);
      digitalWrite(29, LOW);
      passCount++;
    } else if (passCount == 2  && num == PASSWORD[2])
    {
      digitalWrite(27, HIGH);
      digitalWrite(28, HIGH);
      digitalWrite(29, HIGH);
      passCount++;
    } else
    {
      Serial.println("oyyy");
      passCount = 0;
      digitalWrite(27, LOW);
      digitalWrite(28, LOW);
      digitalWrite(29, LOW);
    }
}

int readNumber()
{
  //Check top row
  digitalWrite(colPins[0], LOW); 
  digitalWrite(colPins[1], HIGH); 
  digitalWrite(colPins[2], HIGH); 
  digitalWrite(colPins[3], HIGH);
  for (int k = 0; k <= 3; k++) {
     keyPr[k] = digitalRead(rowPins[k]);
  }
  if (keyPr[0] == 0) {return 1;}
  if (keyPr[1] == 0) {return 2;}
  if (keyPr[2] == 0) {return 3;}
  //delay(100);
  digitalWrite(colPins[0], HIGH); 
  digitalWrite(colPins[1], LOW); 
  digitalWrite(colPins[2], HIGH); 
  digitalWrite(colPins[3], HIGH);
  for (int k = 0; k <= 3; k++) {
     keyPr[k] = digitalRead(rowPins[k]);
  }
  if (keyPr[0] == 0) {return 4;}
  if (keyPr[1] == 0) {return 5;}
  if (keyPr[2] == 0) {return 6;}
  //delay(100);
  digitalWrite(colPins[0], HIGH); 
  digitalWrite(colPins[1], HIGH); 
  digitalWrite(colPins[2], LOW); 
  digitalWrite(colPins[3], HIGH);
  for (int k = 0; k <= 3; k++) {
     keyPr[k] = digitalRead(rowPins[k]);
  }
  if (keyPr[0] == 0) {return 7;}
  if (keyPr[1] == 0) {return 8;}
  if (keyPr[2] == 0) {return 9;}
  return 10;
}

void displaySeg(int number)
{
  for (int i =0; i <= 7; i++){
    digitalWrite(segOutput[i], nums[number][i]);
  }
}
  